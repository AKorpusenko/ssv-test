{{- range $i, $v := .Values.exporters}}

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $v.name }}
  namespace: {{ $.Values.namespace }}
spec:
  hosts:
  - "ws-exporter.{{ $.Values.domain }}"
  gateways:
  - {{ $.Values.name }}
  http:
  - route:
    - destination:
        host: {{ $v.name }}
        port:
          number: 14000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{ $v.name }}
  namespace: {{ $.Values.namespace }}
spec:
  selector:
    istio: ingressgateway-int
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "ws-exporter.{{ $.Values.domain }}"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $v.name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $v.name }}
spec:
  type: ClusterIP
  ports:  {{- range $j, $p := $v.env.ports }}
    - port: {{ $p.value }}
      name: port-{{ $p.value }}
      targetPort: {{ $p.value }}
      protocol: {{ $p.protocol }}
    {{- end }}
  selector:
    app: {{ $v.name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ $v.name }}
  name: {{ $v.name }}
  namespace: {{ $.Values.namespace }}
spec:
  replicas:  {{ $v.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ $v.name }}
  template:
    metadata:
      labels:
        app: {{ $v.name }}
    spec:
      containers:
      - name: {{ $v.name }}
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        resources:
          limits:
            cpu: {{ $v.resources.cpu }}
            memory: {{ $v.resources.mem }}
        command: ["make", "start-node"]
        ports: {{- range $j, $p := $v.env.ports }}
          - containerPort: {{ $p.value }}
            name: port-{{ $p.value }}
            hostPort: {{ $p.value }}
            protocol: {{ $p.protocol }}
          {{- end }}
        env:
          - name: SHARE_CONFIG
            value: "./data/share.yaml"
          - name: ETH_1_ADDR
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: eth1_addr
          - name: CONFIG_PATH
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: config_path
          - name: BOOTNODES
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: boot_node
          - name: REGISTRY_CONTRACT_ADDR_KEY
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: smart_contract_addr_key
          - name: ETH_1_SYNC_OFFSET
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: eth_1_sync_offset
                optional: true
          - name: ABI_VERSION
            valueFrom:
              secretKeyRef:
                name: config-secrets
                key: abi_version
                optional: true
          - name: LOG_LEVEL
            value: "debug"
          - name: DEBUG_SERVICES
            value: "ssv.*"
          - name: DISCOVERY_TYPE_KEY
            value: "discv5"
          - name: NETWORK
            value: "prater"
          - name: DB_PATH
            value: "./data/db-full-node--2023-jan-18--18-20"
          - name: DB_REPORTING
            value: "false"
          - name: METRICS_API_PORT
            value: "15000"
          - name: ENABLE_PROFILE
            value: "true"
          - name: GENERATE_OPERATOR_KEY
            value: "true"
          - name: UDP_PORT
            value: "12000"
          - name: TCP_PORT
            value: "13000"
          - name: WS_API_PORT
            value: "14000"
          - name: FULLNODE
            value: "true"
          - name: EXPORTER
            value: "true"
          - name: GENESIS_EPOCH
            value: "1"
          - name: NETWORK_ID
            value: "shifu-v2-stage"
          - name: P2P_LOG
            value: "false"
          - name: DISCOVERY_TRACE
            value: "false"
          - name: PUBSUB_TRACE
            value: "false"
          - name: SUBNETS
            value: "0xffffffffffffffffffffffffffffffff"
        volumeMounts:
        - mountPath: /data
          name: ssv-exporter
        - mountPath: /data/share.yaml
          subPath: share.yaml
          name: {{ $v.name }}-cm
      volumes:
      - name: ssv-exporter
        persistentVolumeClaim:
          claimName: ssv-exporter
      - name: {{ $v.name }}-cm
        configMap:
          name: {{ $v.name }}-cm
      hostNetwork: true
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

  {{- end }}